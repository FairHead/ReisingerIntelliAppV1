name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  workflow_dispatch:

env:
  DOTNET_VERSION: '8.0.x'  # Use .NET 8.0 for compatibility
  DOTNET_SKIP_FIRST_TIME_EXPERIENCE: 1
  DOTNET_NOLOGO: true

jobs:
  build-and-test:
    name: Build and Test
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}

    - name: Install MAUI workload
      run: dotnet workload install maui

    - name: Restore dependencies
      run: dotnet restore

    - name: Build solution
      run: dotnet build --configuration Release --no-restore

    - name: Run tests
      run: dotnet test --configuration Release --no-build --verbosity normal --collect:"XPlat Code Coverage"

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v4
      if: always()
      with:
        fail_ci_if_error: false

  build-android:
    name: Build Android
    runs-on: ubuntu-latest
    needs: build-and-test
    if: success()
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}

    - name: Install MAUI workload
      run: dotnet workload install maui

    - name: Restore dependencies
      run: dotnet restore

    - name: Build Android
      run: dotnet build -f net8.0-android --configuration Release
      continue-on-error: true  # Allow to continue if Android build fails due to SDK issues

  build-windows:
    name: Build Windows
    runs-on: windows-latest
    needs: build-and-test
    if: success()
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}

    - name: Install MAUI workload
      run: dotnet workload install maui

    - name: Restore dependencies
      run: dotnet restore

    - name: Build Windows
      run: dotnet build -f net8.0-windows10.0.19041.0 --configuration Release
      continue-on-error: true  # Allow to continue if Windows build fails

  build-ios:
    name: Build iOS
    runs-on: macos-latest
    needs: build-and-test
    if: success()
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}

    - name: Install MAUI workload
      run: dotnet workload install maui

    - name: Restore dependencies
      run: dotnet restore

    - name: Build iOS
      run: dotnet build -f net8.0-ios --configuration Release
      continue-on-error: true  # Allow to continue if iOS build fails

  code-quality:
    name: Code Quality Analysis
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}

    - name: Install MAUI workload
      run: dotnet workload install maui

    - name: Restore dependencies
      run: dotnet restore

    - name: Run code analysis
      run: dotnet build --configuration Release --verbosity normal
      continue-on-error: true

    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: build-logs
        path: |
          **/*.log
          **/bin/Release/**
        retention-days: 7